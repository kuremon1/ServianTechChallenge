# Triggers
trigger:
  branches:
    include:
    - main
  paths:
    include:
      - 'infra/*'

variables:
- group: 'Group_Variable_Terraform'
- name: terraform_working_dir
  value: '$(System.DefaultWorkingDirectory)/infra'
- name: build_number
  value: $(Build.BuildNumber)

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  submodules: true
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: 'Install Terraform latest'
- task: qetza.replacetokens.replacetokens-task.replacetokens@5
  displayName: 'Replace tokens in **/*.tfvars'
  inputs:
    rootDirectory: '$(System.DefaultWorkingDirectory)/_build_stc/drop/infra'
    targetFiles: '**/*.tfvars'
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
  displayName: 'Terraform : azurerm init'
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)/_build_stc/drop/infra'
    backendServiceArm: azdevopsarm
    backendAzureRmResourceGroupName: $(terraform_backend_resource_group_name)
    backendAzureRmStorageAccountName: $(terraform_backend_storage_account_name)
    backendAzureRmContainerName: tfbackend
    backendAzureRmKey: terraform.tfstate
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV3@3
  displayName: 'Terraform : plan'
  inputs:
    command: plan
    workingDirectory: '$(System.DefaultWorkingDirectory)/_build_stc/drop/infra'
    commandOptions: '-var-file="terraform.tfvars" -out main.tfplan'
    environmentServiceNameAzureRM: azdevopsarm
- task: AzurePowerShell@5
  displayName: 'Azure PowerShell script: Manage SPN, key vault and network'
  inputs:
    azureSubscription: azdevopsarm
    ScriptPath: '$(System.DefaultWorkingDirectory)/_build_stc/drop/infra/deploy_stuff.ps1'
    azurePowerShellVersion: LatestVersion
- task: CopyFiles@2
  inputs:
    SourceFolder: $(terraform_source_dir)
    Contents: |
      **/?(*.json|*.tf)
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'finops'
    publishLocation: 'Container'